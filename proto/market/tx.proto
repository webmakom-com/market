syntax = "proto3";

package onomyprotocol.market.market;

import "market/market.proto";

import "cosmos/base/v1beta1/coin.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/onomyprotocol/market/x/market/types";

// Msg defines the Msg service.
service Msg {
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc SendDeposit(MsgSendDeposit) returns (MsgSendDepositResponse) {};
  rpc SendWithdraw(MsgSendWithdraw) returns (MsgSendWithdrawResponse) {};

  rpc SendOpen(MsgSendOpen) returns (MsgSendOpenResponse) {};
  rpc SendClose(MsgSendClose) returns (MsgSendCloseResponse) {};
};

// this line is used by starport scaffolding # proto/tx/message
message MsgSendDeposit {
  string sender = 1;
  string port = 2;
  string channel_id = 3;
  uint64 timeout_timestamp = 4;

  // custom fields
  cosmos.base.v1beta1.Coin coin = 5;
};

message MsgSendDepositResponse {};

message MsgSendWithdraw {
  string sender = 1;
  string port = 2;
  string channel_id = 3;
  uint64 timeout_timestamp = 4;

  // custom fields
  cosmos.base.v1beta1.Coin coin = 5;
};

message MsgSendWithdrawResponse {};

message MsgSendOpen {
  string sender = 1;
  string port = 2;
  string channel_id = 3;
  uint64 timeout_timestamp = 4;

  // custom fields
  string ask_coin = 5;
  string bid_coin = 6;
  market.OrderType         order_type = 7;
  market.Order             order = 8;
};

message MsgSendOpenResponse {};

message MsgSendClose {
  string sender = 1;
  string port = 2;
  string channel_id = 3;
  uint64 timeout_timestamp = 4;

  // custom fields
  string ask_coin = 5;
  string bid_coin = 6;
  market.OrderType         order_type = 7;
  int32                    index = 8;
};

message MsgSendCloseResponse {};
